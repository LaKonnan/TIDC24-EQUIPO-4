org: campodonico
app: obrasapi
service: obrasapi

frameworkVersion: '2'

custom:
  tableName: 'obras-${self:provider.stage}'
  wsgi:
    app: app.app
  dynamodb:
    start:
      migrate: true
    stages:
      - dev

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  stage: dev
  region: us-east-2
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    OBRAS_TABLE: ${self:custom.tableName}

functions:
  api:
    handler: wsgi_handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

plugins:
  - serverless-wsgi
  - serverless-python-requirements

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: obraId
            AttributeType: S
        KeySchema:
          - AttributeName: obraId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
    CajasTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id_caja
            AttributeType: S
        KeySchema:
          - AttributeName: id_caja
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: cajas_chicas
        
